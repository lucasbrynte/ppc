training:
  n_epochs: 50
  # n_epochs: 125
  learning_rate: 0.0001
  weight_decay: null
  backup_epochs: false
tasks:
  # pixel_offset:                 {n_out: 2,   loss_func: L1, loss_weight: 1.e-2,   activation: null, min: null, max: null, unit: px, target_norm_loss_decay: null}
  rel_depth_error:              {n_out: 1,   loss_func: L1, loss_weight: 1.0,   activation: null, min: null, max: null, unit: log_factor, target_norm_loss_decay: null}
  # delta_angle_inplane:          {n_out: 1,   loss_func: L1, loss_weight: 1.0,   activation: null, min: null, max: null, unit: angle, target_norm_loss_decay: null}
  # delta_angle_paxis:            {n_out: 1,   loss_func: L1, loss_weight: 1.0,   activation: null, min: null, max: null, unit: angle, target_norm_loss_decay: null}
  # delta_angle_total:            {n_out: 1,   loss_func: L1, loss_weight: 1.0,   activation: null, min: null, max: null, unit: angle, target_norm_loss_decay: null}
  norm_pixel_offset:            {n_out: 1,   loss_func: L2, loss_weight: 1.e-2,   activation: sigmoid, min: 0.0, max: 50.0, unit: px, target_norm_loss_decay: null}
  abs_delta_angle_inplane:      {n_out: 1,   loss_func: L2, loss_weight: 1.0,   activation: sigmoid, min: 0.0, max: 3.1416, unit: angle, target_norm_loss_decay: null}
  abs_delta_angle_total:        {n_out: 1,   loss_func: L2, loss_weight: 1.0,   activation: sigmoid, min: 0.0, max: 3.1416, unit: angle, target_norm_loss_decay: null}
  abs_delta_angle_paxis:        {n_out: 1,   loss_func: L2, loss_weight: 1.0,   activation: sigmoid, min: 0.0, max: 3.1416, unit: angle, target_norm_loss_decay: null}
  # cosdist_delta_angle_inplane:  {n_out: 1,   loss_func: L2, loss_weight: 1.0,   activation: sigmoid, min: 0.0, max: 2.0, unit: cosdist, target_norm_loss_decay: null}
  # cosdist_delta_angle_total:    {n_out: 1,   loss_func: L2, loss_weight: 1.0,   activation: sigmoid, min: 0.0, max: 2.0, unit: cosdist, target_norm_loss_decay: null}
  # cosdist_delta_angle_paxis:    {n_out: 1,   loss_func: L2, loss_weight: 1.0,   activation: sigmoid, min: 0.0, max: 2.0, unit: cosdist, target_norm_loss_decay: null}
logging:
  avg_window_size: 25
model:
  coord_maps:
    enabled: True
    viewing_ray_dependent_coordinates: True
    preserve_scale: False
  cnn_layers:
    - {n_out: 16, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 16, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 32, kernel_size: 3, stride: 1, dilation: 1, merge: true}
    - {n_out: 32, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 64, kernel_size: 3, stride: 2, dilation: 1, merge: true}
    - {n_out: 64, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 96, kernel_size: 3, stride: 2, dilation: 1, merge: true}
    - {n_out: 96, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 128, kernel_size: 3, stride: 2, dilation: 1, merge: true}
    - {n_out: 128, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 192, kernel_size: 3, stride: 2, dilation: 1, merge: true}
  head_layers:
    - {n_out: 1024, dropout_factor: null, relu_flag: true}
    - {n_out: 1024, dropout_factor: null, relu_flag: true}
    - {dropout_factor: null, relu_flag: false}
data:
  dataformat: dummy
  path: /datasets/occluded-linemod-augmented
  img_dims: [480, 480]
  crop_dims: [128, 128]
  sampling:
    object_pose:
      table_size: 1000.0 # 1000 mm
    camera_pose:
      hemisphere_polar_angle_range: [0., 90.] # 0-90 deg, i.e. from bird's eye to horizontal camera
      hemisphere_radius_range: [700., 1500.] # 700 - 1500 mm
      # inplane_rot_angle_range: [-30., 30.] # +- 30 deg
      inplane_rot_angle_range: [-60., 60.] # +- 60 deg
      principal_axis_perturb_angle_range: [-30., 30.] # +- 30 deg
      min_dist_obj_and_camera: 100. # Minimum 10 cm between object surface and camera center
    perturbation:
      std_angle: 2.
      std_object_bias_over_extent: 0.0
      std_depth_rescale_factor: 1.0
      # std_angle: 90. # 90 degrees
      # std_object_bias_over_extent: 0.2 # 20% of object size along each dimension
      # std_depth_rescale_factor: 1.3
      min_dist_obj_and_camera: 100. # Minimum 10 cm between object surface and camera center
loading:
  train:
    batch_size: 32
    num_workers: 6
    shuffle: true
  val:
    batch_size: 32
    num_workers: 6
    shuffle: true
