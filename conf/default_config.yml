training:
  n_epochs: 100
  learning_rate: 0.0001
  weight_decay: null
  backup_epochs: false
tasks:
  pixel_offset:                 {n_out: 2,   loss_func: L1,   activation: null}
  rel_depth_error:              {n_out: 1,   loss_func: L1,   activation: null}
  delta_angle_inplane:          {n_out: 1,   loss_func: L1,   activation: null}
  delta_theta:                  {n_out: 1,   loss_func: L1,   activation: null}
  delta_R33:                    {n_out: 1,   loss_func: L2,   activation: sigmoid}
  norm_pixel_offset:            {n_out: 1,   loss_func: L2,   activation: sigmoid}
  abs_delta_angle_inplane:      {n_out: 1,   loss_func: L2,   activation: sigmoid}
  abs_delta_theta:              {n_out: 1,   loss_func: L2,   activation: sigmoid}
  cosdist_delta_angle_inplane:  {n_out: 1,   loss_func: L2,   activation: sigmoid}
  cosdist_delta_theta:          {n_out: 1,   loss_func: L2,   activation: sigmoid}
logging:
  avg_window_size: 25
model:
  cnn_layers:
    - {n_out: 16, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 16, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 32, kernel_size: 3, stride: 1, dilation: 1, merge: true}
    - {n_out: 32, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 64, kernel_size: 3, stride: 2, dilation: 1, merge: true}
    - {n_out: 64, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 96, kernel_size: 3, stride: 2, dilation: 1, merge: true}
    - {n_out: 96, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 128, kernel_size: 3, stride: 2, dilation: 1, merge: true}
    - {n_out: 128, kernel_size: 3, stride: 1, dilation: 1, merge: false}
    - {n_out: 192, kernel_size: 3, stride: 2, dilation: 1, merge: true}
  head_layers:
    - {n_out: 1024, dropout_factor: null, relu_flag: true}
    - {n_out: 1024, dropout_factor: null, relu_flag: true}
    - {dropout_factor: null, relu_flag: false}
data:
  dataformat: dummy
  path: /datasets/occluded-linemod-augmented
  img_dims: [480, 480]
  crop_dims: [128, 128]
loading:
  train:
    batch_size: 32
    num_workers: 6
    shuffle: true
  val:
    batch_size: 32
    num_workers: 6
    shuffle: true
